# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

# import gatewayagent_pb2 as gatewayagent__pb2
from . import gatewayagent_pb2 as gatewayagent__pb2


GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in gatewayagent_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class GatewayAgentStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.NetAdapterInfo = channel.unary_unary(
                '/keyhan.gateway_agent_messages.GatewayAgent/NetAdapterInfo',
                request_serializer=gatewayagent__pb2.NullRequest.SerializeToString,
                response_deserializer=gatewayagent__pb2.NetAdapterInfoResponse.FromString,
                _registered_method=True)
        self.SetDateTime = channel.unary_unary(
                '/keyhan.gateway_agent_messages.GatewayAgent/SetDateTime',
                request_serializer=gatewayagent__pb2.SetDateTimeRequest.SerializeToString,
                response_deserializer=gatewayagent__pb2.NullResponse.FromString,
                _registered_method=True)
        self.GetDateTime = channel.unary_unary(
                '/keyhan.gateway_agent_messages.GatewayAgent/GetDateTime',
                request_serializer=gatewayagent__pb2.NullRequest.SerializeToString,
                response_deserializer=gatewayagent__pb2.GetDateTimeResponse.FromString,
                _registered_method=True)
        self.AddRoute = channel.unary_unary(
                '/keyhan.gateway_agent_messages.GatewayAgent/AddRoute',
                request_serializer=gatewayagent__pb2.RouteInfo.SerializeToString,
                response_deserializer=gatewayagent__pb2.NullResponse.FromString,
                _registered_method=True)
        self.RemoveRoute = channel.unary_unary(
                '/keyhan.gateway_agent_messages.GatewayAgent/RemoveRoute',
                request_serializer=gatewayagent__pb2.RouteInfo.SerializeToString,
                response_deserializer=gatewayagent__pb2.NullResponse.FromString,
                _registered_method=True)
        self.ShowRoute = channel.unary_unary(
                '/keyhan.gateway_agent_messages.GatewayAgent/ShowRoute',
                request_serializer=gatewayagent__pb2.NullRequest.SerializeToString,
                response_deserializer=gatewayagent__pb2.ShowRoutesResponse.FromString,
                _registered_method=True)
        self.Arp = channel.unary_unary(
                '/keyhan.gateway_agent_messages.GatewayAgent/Arp',
                request_serializer=gatewayagent__pb2.NullRequest.SerializeToString,
                response_deserializer=gatewayagent__pb2.ExecutionResponse.FromString,
                _registered_method=True)
        self.Ping = channel.unary_unary(
                '/keyhan.gateway_agent_messages.GatewayAgent/Ping',
                request_serializer=gatewayagent__pb2.PingRequest.SerializeToString,
                response_deserializer=gatewayagent__pb2.ExecutionResponse.FromString,
                _registered_method=True)
        self.TraceRoute = channel.unary_unary(
                '/keyhan.gateway_agent_messages.GatewayAgent/TraceRoute',
                request_serializer=gatewayagent__pb2.TraceRouteRequest.SerializeToString,
                response_deserializer=gatewayagent__pb2.ExecutionResponse.FromString,
                _registered_method=True)
        self.TcpPortTest = channel.unary_unary(
                '/keyhan.gateway_agent_messages.GatewayAgent/TcpPortTest',
                request_serializer=gatewayagent__pb2.TcpPortTestRequest.SerializeToString,
                response_deserializer=gatewayagent__pb2.ExecutionResponse.FromString,
                _registered_method=True)


class GatewayAgentServicer(object):
    """Missing associated documentation comment in .proto file."""

    def NetAdapterInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDateTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDateTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddRoute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveRoute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShowRoute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Arp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TraceRoute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TcpPortTest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GatewayAgentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'NetAdapterInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.NetAdapterInfo,
                    request_deserializer=gatewayagent__pb2.NullRequest.FromString,
                    response_serializer=gatewayagent__pb2.NetAdapterInfoResponse.SerializeToString,
            ),
            'SetDateTime': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDateTime,
                    request_deserializer=gatewayagent__pb2.SetDateTimeRequest.FromString,
                    response_serializer=gatewayagent__pb2.NullResponse.SerializeToString,
            ),
            'GetDateTime': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDateTime,
                    request_deserializer=gatewayagent__pb2.NullRequest.FromString,
                    response_serializer=gatewayagent__pb2.GetDateTimeResponse.SerializeToString,
            ),
            'AddRoute': grpc.unary_unary_rpc_method_handler(
                    servicer.AddRoute,
                    request_deserializer=gatewayagent__pb2.RouteInfo.FromString,
                    response_serializer=gatewayagent__pb2.NullResponse.SerializeToString,
            ),
            'RemoveRoute': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveRoute,
                    request_deserializer=gatewayagent__pb2.RouteInfo.FromString,
                    response_serializer=gatewayagent__pb2.NullResponse.SerializeToString,
            ),
            'ShowRoute': grpc.unary_unary_rpc_method_handler(
                    servicer.ShowRoute,
                    request_deserializer=gatewayagent__pb2.NullRequest.FromString,
                    response_serializer=gatewayagent__pb2.ShowRoutesResponse.SerializeToString,
            ),
            'Arp': grpc.unary_unary_rpc_method_handler(
                    servicer.Arp,
                    request_deserializer=gatewayagent__pb2.NullRequest.FromString,
                    response_serializer=gatewayagent__pb2.ExecutionResponse.SerializeToString,
            ),
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=gatewayagent__pb2.PingRequest.FromString,
                    response_serializer=gatewayagent__pb2.ExecutionResponse.SerializeToString,
            ),
            'TraceRoute': grpc.unary_unary_rpc_method_handler(
                    servicer.TraceRoute,
                    request_deserializer=gatewayagent__pb2.TraceRouteRequest.FromString,
                    response_serializer=gatewayagent__pb2.ExecutionResponse.SerializeToString,
            ),
            'TcpPortTest': grpc.unary_unary_rpc_method_handler(
                    servicer.TcpPortTest,
                    request_deserializer=gatewayagent__pb2.TcpPortTestRequest.FromString,
                    response_serializer=gatewayagent__pb2.ExecutionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'keyhan.gateway_agent_messages.GatewayAgent', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('keyhan.gateway_agent_messages.GatewayAgent', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class GatewayAgent(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def NetAdapterInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/keyhan.gateway_agent_messages.GatewayAgent/NetAdapterInfo',
            gatewayagent__pb2.NullRequest.SerializeToString,
            gatewayagent__pb2.NetAdapterInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetDateTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/keyhan.gateway_agent_messages.GatewayAgent/SetDateTime',
            gatewayagent__pb2.SetDateTimeRequest.SerializeToString,
            gatewayagent__pb2.NullResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDateTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/keyhan.gateway_agent_messages.GatewayAgent/GetDateTime',
            gatewayagent__pb2.NullRequest.SerializeToString,
            gatewayagent__pb2.GetDateTimeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddRoute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/keyhan.gateway_agent_messages.GatewayAgent/AddRoute',
            gatewayagent__pb2.RouteInfo.SerializeToString,
            gatewayagent__pb2.NullResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveRoute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/keyhan.gateway_agent_messages.GatewayAgent/RemoveRoute',
            gatewayagent__pb2.RouteInfo.SerializeToString,
            gatewayagent__pb2.NullResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ShowRoute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/keyhan.gateway_agent_messages.GatewayAgent/ShowRoute',
            gatewayagent__pb2.NullRequest.SerializeToString,
            gatewayagent__pb2.ShowRoutesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Arp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/keyhan.gateway_agent_messages.GatewayAgent/Arp',
            gatewayagent__pb2.NullRequest.SerializeToString,
            gatewayagent__pb2.ExecutionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/keyhan.gateway_agent_messages.GatewayAgent/Ping',
            gatewayagent__pb2.PingRequest.SerializeToString,
            gatewayagent__pb2.ExecutionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TraceRoute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/keyhan.gateway_agent_messages.GatewayAgent/TraceRoute',
            gatewayagent__pb2.TraceRouteRequest.SerializeToString,
            gatewayagent__pb2.ExecutionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TcpPortTest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/keyhan.gateway_agent_messages.GatewayAgent/TcpPortTest',
            gatewayagent__pb2.TcpPortTestRequest.SerializeToString,
            gatewayagent__pb2.ExecutionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
